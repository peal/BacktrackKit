  
  [1X2 [33X[0;0YFunctionality[133X[101X
  
  
  [1X2.1 [33X[0;0YExample methods[133X[101X
  
  [33X[0;0YThis section will describe the example methods of BacktrackKit.[133X
  
  [1X2.1-1 SaveState[101X
  
  [33X[1;0Y[29X[2XSaveState[102X( [3Xarg[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10YThe saved state[133X
  
  [33X[0;0YReturn  a  small  object which allows one to revert to this state from later
  the search.[133X
  
  [1X2.1-2 RestoreState[101X
  
  [33X[1;0Y[29X[2XRestoreState[102X( [3Xstate[103X, [3Xsaved[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10Ynothing.[133X
  
  [33X[0;0YRevert  to  a saved state from later in the search. The first argument [3Xstate[103X
  must  be the current state object, and the second argument [3Xsaved[103X must be one
  of the objects produced by [10XSaveState[110X from earlier in the search.[133X
  
  [1X2.1-3 ConsolidateState[101X
  
  [33X[1;0Y[29X[2XConsolidateState[102X( [3Xarg1[103X, [3Xarg2[103X ) [32X operation[133X
  
  [33X[0;0YSome implementations of BacktrackableState can perform simplifications. This
  function  gives a well-defined point for such operations to be performed. It
  can be ignored by implementations without such simplifications.[133X
  
  [1X2.1-4 BTKit_BuildProblem[101X
  
  [33X[1;0Y[29X[2XBTKit_BuildProblem[102X( [3Xarg[103X ) [32X function[133X
  
  [33X[0;0YTakes  a  partition  stack and a list of constraints and builds a 'Problem',
  Which  can  then be solved by passing the 'Problem' to BTKit_SimpleSearch or
  BT_SimpleSinglePermSearch.[133X
  
  [1X2.1-5 InfoBTKit[101X
  
  [33X[1;0Y[29X[2XInfoBTKit[102X [32X info class[133X
  
  [33X[0;0YInformation about backtrack search.[133X
  
